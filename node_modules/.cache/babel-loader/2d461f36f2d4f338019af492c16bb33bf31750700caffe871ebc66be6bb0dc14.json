{"ast":null,"code":"var _jsxFileName = \"/Users/shani/Documents/ga_seir/projects/buddy-up-frontend/src/components/BuddySwipe.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { BASE_URL } from '../globals';\nimport UserCard from './UserCard';\nimport Client from '../services/api';\nimport BuddyList from '../components/BuddyList';\nimport '../styling/BuddySwipe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuddySwipe = _ref => {\n  _s();\n  let {\n    user,\n    selectActivity\n  } = _ref;\n  const [poolOfBuddies, setPoolOfBuddies] = useState([]);\n  const [potentialBuddy, setPotentialBuddy] = useState({});\n  const [noMorePotentialBuddies, toggleNoMorePotentialBuddies] = useState(false);\n  const [clickNext, toggleClickNext] = useState(false);\n  const [clickBuddyUp, toggleClickBuddyUp] = useState(false);\n  const [buddyLikes, setBuddyLikes] = useState([]);\n  const [potentialBuddyMatches, setPotentialBuddyMatches] = useState([]);\n  const [connection, toggleConnection] = useState(false);\n  const [buddyConnections, setBuddyConnections] = useState([]);\n  const getUsersWhoLikedActivity = async () => {\n    const usersWhoLikedActivity = await axios.get(`${BASE_URL}/user-activities/activity/${selectActivity.id}`);\n    return usersWhoLikedActivity;\n  };\n  const filterOutUserFromUsersWhoLikedActivity = usersWhoLikedActivity => {\n    const userActivitiesListFilteredOutUser = usersWhoLikedActivity.data[0].activities_user_list.filter(userActivity => userActivity.id !== user.id);\n    return userActivitiesListFilteredOutUser;\n  };\n  const getRejectedBuddiesList = async () => {\n    const rejectedBuddiesList = await axios.get(`${BASE_URL}/next-buddies/all/user/${user.id}`);\n    return rejectedBuddiesList;\n  };\n  const getUserRejectedBuddyPairByActivityId = async () => {\n    const userRejectedBuddyPairByActivityId = await axios.get(`${BASE_URL}/next-buddy-activities/raw/activity/${selectActivity.id}`);\n    return userRejectedBuddyPairByActivityId;\n  };\n  const getLikedBuddiesList = async () => {\n    const likedBuddiesList = await axios.get(`${BASE_URL}/user-buddies/all/${user.id}`);\n    return likedBuddiesList;\n  };\n  const getUserBuddyPairByActivityId = async () => {\n    const userBuddyPairByActivityId = await axios.get(`${BASE_URL}/user-buddy-activities/raw/activity/${selectActivity.id}`);\n    return userBuddyPairByActivityId;\n  };\n  const getListOfUserBuddyPairById = buddiesList => {\n    const listOfUserBuddyPairById = buddiesList.data.map(buddy => {\n      return buddy.id;\n    });\n    return listOfUserBuddyPairById;\n  };\n  const getFilteredListOfUserRejectedBuddyPairByActivityId = (userRejectedBuddyPairByActivityId, listOfUserRejectedBuddyPairById) => {\n    const compare = [];\n    let match;\n    userRejectedBuddyPairByActivityId.data.forEach(userRejectedBuddy => {\n      compare.push(userRejectedBuddy.userRejectedBuddyId);\n      match = listOfUserRejectedBuddyPairById.filter(userRejectedBuddyPairId => compare.indexOf(userRejectedBuddyPairId) !== -1);\n    });\n    const filteredListOfUserRejectedBuddyPairByActivityId = [];\n    if (match) {\n      if (match.length > 0) {\n        filteredListOfUserRejectedBuddyPairByActivityId.push(...match);\n      }\n    }\n    return filteredListOfUserRejectedBuddyPairByActivityId;\n  };\n  const getFilteredListOfUserBuddyPairByActivityId = (userBuddyPairByActivityId, listOfUserBuddyPairById) => {\n    const compare = [];\n    let match;\n    userBuddyPairByActivityId.data.forEach(userBuddy => {\n      compare.push(userBuddy.userBuddyId);\n      match = listOfUserBuddyPairById.filter(userBuddyPairId => compare.indexOf(userBuddyPairId) !== -1);\n    });\n    const filteredListOfUserBuddyPairByActivityId = [];\n    if (match) {\n      if (match.length > 0) {\n        filteredListOfUserBuddyPairByActivityId.push(...match);\n      }\n    }\n    return filteredListOfUserBuddyPairByActivityId;\n  };\n  const getListOfBuddiesToRemove = (buddiesList, filteredListOfUserBuddyPairByActivityId) => {\n    const listOfBuddiesToRemove = [];\n    buddiesList.data.forEach(buddy => {\n      filteredListOfUserBuddyPairByActivityId.forEach(activityBuddy => {\n        if (buddy.id === activityBuddy) {\n          listOfBuddiesToRemove.push(buddy);\n        }\n      });\n    });\n    return listOfBuddiesToRemove;\n  };\n  const getPotentialBuddyRejects = (userActivitiesListFilteredOutUser, listOfRejectsToRemove) => {\n    const potentialBuddiesRejected = [];\n    userActivitiesListFilteredOutUser.forEach(buddy => {\n      listOfRejectsToRemove.forEach(reject => {\n        if (buddy.id === reject.rejectedBuddyId && !potentialBuddiesRejected.includes(buddy)) {\n          potentialBuddiesRejected.push(buddy);\n        }\n      });\n    });\n    return potentialBuddiesRejected;\n  };\n  const getPotentialBuddyMatches = (userActivitiesListFilteredOutUser, listOfBuddiesToRemove) => {\n    const potentialBuddiesMatches = [];\n    userActivitiesListFilteredOutUser.forEach(buddy => {\n      listOfBuddiesToRemove.forEach(buddyPotentials => {\n        if (buddy.id === buddyPotentials.buddyId && !potentialBuddiesMatches.includes(buddy)) {\n          potentialBuddiesMatches.push(buddy);\n        }\n      });\n    });\n    return potentialBuddiesMatches;\n  };\n  const filterPotentialBuddyPool = (potentialBuddyFilter, userActivitiesListFilteredOutUser) => {\n    potentialBuddyFilter.forEach(filteredBuddy => {\n      if (userActivitiesListFilteredOutUser.includes(filteredBuddy)) {\n        userActivitiesListFilteredOutUser.splice(userActivitiesListFilteredOutUser.indexOf(filteredBuddy), 1);\n      }\n    });\n  };\n  const getPoolOfBuddies = async () => {\n    const usersWhoLikedActivity = await getUsersWhoLikedActivity();\n    const userActivitiesListFilteredOutUser = filterOutUserFromUsersWhoLikedActivity(usersWhoLikedActivity);\n    if (user !== null && user) {\n      // Filter out rejected buddies for this activity\n      const rejectedBuddiesList = await getRejectedBuddiesList();\n      const userRejectedBuddyPairByActivityId = await getUserRejectedBuddyPairByActivityId();\n      const listOfUserRejectedBuddyPairById = getListOfUserBuddyPairById(rejectedBuddiesList);\n      const filteredListOfUserRejectedBuddyPairByActivityId = getFilteredListOfUserRejectedBuddyPairByActivityId(userRejectedBuddyPairByActivityId, listOfUserRejectedBuddyPairById);\n      const listOfRejectsToRemove = getListOfBuddiesToRemove(rejectedBuddiesList, filteredListOfUserRejectedBuddyPairByActivityId);\n      const potentialBuddiesRejected = getPotentialBuddyRejects(userActivitiesListFilteredOutUser, listOfRejectsToRemove);\n      filterPotentialBuddyPool(potentialBuddiesRejected, userActivitiesListFilteredOutUser);\n\n      // Filter out liked buddies for this activity\n      const likedBuddiesList = await getLikedBuddiesList();\n      const userBuddyPairByActivityId = await getUserBuddyPairByActivityId();\n      const listOfUserBuddyPairById = getListOfUserBuddyPairById(likedBuddiesList);\n      const filteredListOfUserBuddyPairByActivityId = getFilteredListOfUserBuddyPairByActivityId(userBuddyPairByActivityId, listOfUserBuddyPairById);\n      const listOfBuddyLikesToRemove = getListOfBuddiesToRemove(likedBuddiesList, filteredListOfUserBuddyPairByActivityId);\n      setBuddyLikes(listOfBuddyLikesToRemove);\n      const potentialBuddyMatches = getPotentialBuddyMatches(userActivitiesListFilteredOutUser, listOfBuddyLikesToRemove);\n      setPotentialBuddyMatches(potentialBuddyMatches);\n      filterPotentialBuddyPool(potentialBuddyMatches, userActivitiesListFilteredOutUser);\n    }\n    setPoolOfBuddies(userActivitiesListFilteredOutUser);\n  };\n  const getRandomPotentialBuddy = () => {\n    const randomBuddy = poolOfBuddies[Math.floor(Math.random() * poolOfBuddies.length)];\n    setPotentialBuddy(randomBuddy);\n  };\n  const removeRejectedBuddyFromPool = async () => {\n    const potentialBuddyId = potentialBuddy.id;\n    const userRejectedBuddy = await Client.post(`${BASE_URL}/next-buddies/user/${user.id}/rejected-buddy/${potentialBuddyId}`);\n    const userRejectBuddyId = userRejectedBuddy.data[0][0].id;\n    const userRejectedBuddyActivity = await Client.post(`${BASE_URL}/next-buddy-activities/user-rejected-buddy/${userRejectBuddyId}/activity/${selectActivity.id}`);\n  };\n  const removeMatchedBuddyFromPool = async () => {\n    const potentialBuddyId = potentialBuddy.id;\n    const userMatchedBuddy = await Client.post(`${BASE_URL}/user-buddies/raw/user/${user.id}/buddy/${potentialBuddyId}`);\n    const userMatchedBuddyId = userMatchedBuddy.data[0][0].id;\n    const userBuddyActivity = await Client.post(`${BASE_URL}/user-buddy-activities/user-buddy/${userMatchedBuddyId}/activity/${selectActivity.id}`);\n  };\n  const getNextUser = async () => {\n    await removeRejectedBuddyFromPool();\n    toggleClickNext(!clickNext);\n  };\n  const addUserToBuddyList = async () => {\n    await removeMatchedBuddyFromPool();\n    toggleClickBuddyUp(!clickBuddyUp);\n  };\n  const setMatches = async () => {\n    const buddyMatches = [];\n    buddyLikes.forEach(buddyLike => {\n      potentialBuddyMatches.forEach(potentialConnection => {\n        if (potentialConnection.id === buddyLike.userId && !buddyMatches.includes(potentialConnection)) {\n          buddyMatches.push(potentialConnection);\n        }\n      });\n    });\n    setBuddyConnections(buddyMatches);\n    if (buddyConnections.length > 0) {\n      toggleConnection(true);\n    }\n  };\n  useEffect(() => {\n    getPoolOfBuddies();\n  }, [user, clickNext, clickBuddyUp]);\n  useEffect(() => {\n    if (poolOfBuddies.length > 0) {\n      getRandomPotentialBuddy();\n      toggleNoMorePotentialBuddies(false);\n    } else {\n      toggleNoMorePotentialBuddies(true);\n    }\n    setMatches();\n  }, [poolOfBuddies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buddySwipeAndMatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buddySwipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buddy Swipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), noMorePotentialBuddies ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for More Buddies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(UserCard, {\n        userBuddy: potentialBuddy,\n        getNextUser: getNextUser,\n        addUserToBuddyList: addUserToBuddyList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buddyMatch\",\n      children: [user && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buddy Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }, this), user && !connection && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for Buddies To Match...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buddyMatchList\",\n        children: user && connection && buddyConnections.map(buddyConnection => /*#__PURE__*/_jsxDEV(BuddyList, {\n          buddyConnection: buddyConnection\n        }, buddyConnection.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(BuddySwipe, \"y9kJDJ3Qtd9YYX5q9kFR5DNu1tU=\");\n_c = BuddySwipe;\nexport default BuddySwipe;\nvar _c;\n$RefreshReg$(_c, \"BuddySwipe\");","map":{"version":3,"names":["axios","useState","useEffect","BASE_URL","UserCard","Client","BuddyList","BuddySwipe","user","selectActivity","poolOfBuddies","setPoolOfBuddies","potentialBuddy","setPotentialBuddy","noMorePotentialBuddies","toggleNoMorePotentialBuddies","clickNext","toggleClickNext","clickBuddyUp","toggleClickBuddyUp","buddyLikes","setBuddyLikes","potentialBuddyMatches","setPotentialBuddyMatches","connection","toggleConnection","buddyConnections","setBuddyConnections","getUsersWhoLikedActivity","usersWhoLikedActivity","get","id","filterOutUserFromUsersWhoLikedActivity","userActivitiesListFilteredOutUser","data","activities_user_list","filter","userActivity","getRejectedBuddiesList","rejectedBuddiesList","getUserRejectedBuddyPairByActivityId","userRejectedBuddyPairByActivityId","getLikedBuddiesList","likedBuddiesList","getUserBuddyPairByActivityId","userBuddyPairByActivityId","getListOfUserBuddyPairById","buddiesList","listOfUserBuddyPairById","map","buddy","getFilteredListOfUserRejectedBuddyPairByActivityId","listOfUserRejectedBuddyPairById","compare","match","forEach","userRejectedBuddy","push","userRejectedBuddyId","userRejectedBuddyPairId","indexOf","filteredListOfUserRejectedBuddyPairByActivityId","length","getFilteredListOfUserBuddyPairByActivityId","userBuddy","userBuddyId","userBuddyPairId","filteredListOfUserBuddyPairByActivityId","getListOfBuddiesToRemove","listOfBuddiesToRemove","activityBuddy","getPotentialBuddyRejects","listOfRejectsToRemove","potentialBuddiesRejected","reject","rejectedBuddyId","includes","getPotentialBuddyMatches","potentialBuddiesMatches","buddyPotentials","buddyId","filterPotentialBuddyPool","potentialBuddyFilter","filteredBuddy","splice","getPoolOfBuddies","listOfBuddyLikesToRemove","getRandomPotentialBuddy","randomBuddy","Math","floor","random","removeRejectedBuddyFromPool","potentialBuddyId","post","userRejectBuddyId","userRejectedBuddyActivity","removeMatchedBuddyFromPool","userMatchedBuddy","userMatchedBuddyId","userBuddyActivity","getNextUser","addUserToBuddyList","setMatches","buddyMatches","buddyLike","potentialConnection","userId","buddyConnection"],"sources":["/Users/shani/Documents/ga_seir/projects/buddy-up-frontend/src/components/BuddySwipe.jsx"],"sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { BASE_URL } from '../globals'\nimport UserCard from './UserCard'\nimport Client from '../services/api'\nimport BuddyList from '../components/BuddyList';\nimport '../styling/BuddySwipe.css'\n\nconst BuddySwipe = ({ user, selectActivity }) => {\n  const [poolOfBuddies, setPoolOfBuddies] = useState([])\n  const [potentialBuddy, setPotentialBuddy] = useState({})\n  const [noMorePotentialBuddies, toggleNoMorePotentialBuddies] = useState(false)\n  const [clickNext, toggleClickNext] = useState(false)\n  const [clickBuddyUp, toggleClickBuddyUp] = useState(false)\n  const [buddyLikes, setBuddyLikes] = useState([]);\n  const [potentialBuddyMatches, setPotentialBuddyMatches] = useState([])\n  const [connection, toggleConnection] = useState(false)\n  const [buddyConnections, setBuddyConnections] = useState([])\n\n  const getUsersWhoLikedActivity = async () => {\n    const usersWhoLikedActivity = await axios.get(\n      `${BASE_URL}/user-activities/activity/${selectActivity.id}`\n    )\n    return usersWhoLikedActivity\n  }\n\n  const filterOutUserFromUsersWhoLikedActivity = (usersWhoLikedActivity) => {\n    const userActivitiesListFilteredOutUser =\n    usersWhoLikedActivity.data[0].activities_user_list.filter(\n      (userActivity) => userActivity.id !== user.id\n    )\n    return userActivitiesListFilteredOutUser\n  }\n\n  const getRejectedBuddiesList = async () => {\n    const rejectedBuddiesList = await axios.get(\n      `${BASE_URL}/next-buddies/all/user/${user.id}`\n    )\n    return rejectedBuddiesList\n  }\n\n  const getUserRejectedBuddyPairByActivityId = async () => {\n    const userRejectedBuddyPairByActivityId = await axios.get(\n      `${BASE_URL}/next-buddy-activities/raw/activity/${selectActivity.id}`\n      )\n    return userRejectedBuddyPairByActivityId\n  }\n\n  const getLikedBuddiesList = async () => {\n    const likedBuddiesList = await axios.get(`${BASE_URL}/user-buddies/all/${user.id}`)\n    return likedBuddiesList\n  }\n\n  const getUserBuddyPairByActivityId = async () => {\n    const userBuddyPairByActivityId = await axios.get(`${BASE_URL}/user-buddy-activities/raw/activity/${selectActivity.id}`)\n    return userBuddyPairByActivityId\n  }\n\n  const getListOfUserBuddyPairById = (buddiesList) => {\n    const listOfUserBuddyPairById = buddiesList.data.map(buddy => {\n      return buddy.id\n    })\n    return listOfUserBuddyPairById\n  }\n\n  const getFilteredListOfUserRejectedBuddyPairByActivityId = (userRejectedBuddyPairByActivityId, listOfUserRejectedBuddyPairById) => {\n    const compare = []\n    let match; \n    userRejectedBuddyPairByActivityId.data.forEach(userRejectedBuddy=>{\n      compare.push(userRejectedBuddy.userRejectedBuddyId)\n      match = listOfUserRejectedBuddyPairById.filter((userRejectedBuddyPairId)=>compare.indexOf(userRejectedBuddyPairId)!==-1)\n    })\n    const filteredListOfUserRejectedBuddyPairByActivityId = []\n    if (match) {\n    if (match.length > 0) {\n      filteredListOfUserRejectedBuddyPairByActivityId.push(...match)\n      }\n    }\n    return filteredListOfUserRejectedBuddyPairByActivityId\n  }\n\n  const getFilteredListOfUserBuddyPairByActivityId = (userBuddyPairByActivityId, listOfUserBuddyPairById) => {\n    const compare = []\n    let match; \n    userBuddyPairByActivityId.data.forEach(userBuddy=>{\n      compare.push(userBuddy.userBuddyId)\n      match = listOfUserBuddyPairById.filter((userBuddyPairId)=>compare.indexOf(userBuddyPairId)!==-1)\n    })\n    const filteredListOfUserBuddyPairByActivityId = []\n    if (match) {\n      if (match.length > 0) {\n      filteredListOfUserBuddyPairByActivityId.push(...match)\n      }\n    }\n    return filteredListOfUserBuddyPairByActivityId\n  }\n\n  const getListOfBuddiesToRemove = (buddiesList, filteredListOfUserBuddyPairByActivityId) => {\n    const listOfBuddiesToRemove = []\n    buddiesList.data.forEach((buddy)=>\n    { filteredListOfUserBuddyPairByActivityId.forEach((activityBuddy)=>{ \n      if (buddy.id===activityBuddy){\n        listOfBuddiesToRemove.push(buddy)\n      }\n    })\n    })\n    return listOfBuddiesToRemove\n  }\n\n  const getPotentialBuddyRejects = (userActivitiesListFilteredOutUser, listOfRejectsToRemove) => {\n    const potentialBuddiesRejected = []\n    userActivitiesListFilteredOutUser.forEach((buddy)=> { \n      listOfRejectsToRemove.forEach((reject)=>{ \n        if (buddy.id===reject.rejectedBuddyId && !potentialBuddiesRejected.includes(buddy)){\n          potentialBuddiesRejected.push(buddy)\n      }\n    })\n    })\n    return potentialBuddiesRejected\n  }\n\n  const getPotentialBuddyMatches = (userActivitiesListFilteredOutUser, listOfBuddiesToRemove) => {\n    const potentialBuddiesMatches = []\n    userActivitiesListFilteredOutUser.forEach((buddy)=> { \n      listOfBuddiesToRemove.forEach((buddyPotentials)=>{ \n        if (buddy.id===buddyPotentials.buddyId && !potentialBuddiesMatches.includes(buddy)){\n          potentialBuddiesMatches.push(buddy)\n      }\n    })\n    })\n    return potentialBuddiesMatches\n  }\n\n  const filterPotentialBuddyPool = (potentialBuddyFilter, userActivitiesListFilteredOutUser) => {\n    potentialBuddyFilter.forEach((filteredBuddy) => {\n      if (userActivitiesListFilteredOutUser.includes(filteredBuddy)) {\n        userActivitiesListFilteredOutUser.splice(userActivitiesListFilteredOutUser.indexOf(filteredBuddy), 1)\n      }\n    })\n  }\n\n  const getPoolOfBuddies = async () => {\n    const usersWhoLikedActivity = await getUsersWhoLikedActivity()\n    const userActivitiesListFilteredOutUser = filterOutUserFromUsersWhoLikedActivity(usersWhoLikedActivity)\n    if (user !== null && user ) {\n      // Filter out rejected buddies for this activity\n      const rejectedBuddiesList = await getRejectedBuddiesList()\n      const userRejectedBuddyPairByActivityId = await getUserRejectedBuddyPairByActivityId()\n      const listOfUserRejectedBuddyPairById = getListOfUserBuddyPairById(rejectedBuddiesList)\n      const filteredListOfUserRejectedBuddyPairByActivityId = getFilteredListOfUserRejectedBuddyPairByActivityId(userRejectedBuddyPairByActivityId, listOfUserRejectedBuddyPairById)\n      const listOfRejectsToRemove = getListOfBuddiesToRemove(rejectedBuddiesList, filteredListOfUserRejectedBuddyPairByActivityId)\n      const potentialBuddiesRejected = getPotentialBuddyRejects(userActivitiesListFilteredOutUser, listOfRejectsToRemove)\n      filterPotentialBuddyPool(potentialBuddiesRejected, userActivitiesListFilteredOutUser)\n\n      // Filter out liked buddies for this activity\n      const likedBuddiesList = await getLikedBuddiesList()\n      const userBuddyPairByActivityId = await getUserBuddyPairByActivityId()\n      const listOfUserBuddyPairById = getListOfUserBuddyPairById(likedBuddiesList)\n      const filteredListOfUserBuddyPairByActivityId = getFilteredListOfUserBuddyPairByActivityId(userBuddyPairByActivityId, listOfUserBuddyPairById)\n      const listOfBuddyLikesToRemove = getListOfBuddiesToRemove(likedBuddiesList, filteredListOfUserBuddyPairByActivityId)\n      setBuddyLikes(listOfBuddyLikesToRemove)\n      const potentialBuddyMatches = getPotentialBuddyMatches(userActivitiesListFilteredOutUser, listOfBuddyLikesToRemove)\n      setPotentialBuddyMatches(potentialBuddyMatches)\n      filterPotentialBuddyPool(potentialBuddyMatches, userActivitiesListFilteredOutUser)\n    } \n  setPoolOfBuddies(userActivitiesListFilteredOutUser)\n}\n\n  const getRandomPotentialBuddy = () => {\n    const randomBuddy =\n      poolOfBuddies[Math.floor(Math.random() * poolOfBuddies.length)]\n    setPotentialBuddy(randomBuddy)\n  }\n\n  const removeRejectedBuddyFromPool = async () => {\n    const potentialBuddyId = potentialBuddy.id\n    const userRejectedBuddy = await Client.post(\n      `${BASE_URL}/next-buddies/user/${user.id}/rejected-buddy/${potentialBuddyId}`\n    )\n    const userRejectBuddyId = userRejectedBuddy.data[0][0].id\n    const userRejectedBuddyActivity = await Client.post(\n      `${BASE_URL}/next-buddy-activities/user-rejected-buddy/${userRejectBuddyId}/activity/${selectActivity.id}`\n    )\n  }\n\n  const removeMatchedBuddyFromPool = async () => {\n    const potentialBuddyId = potentialBuddy.id\n    const userMatchedBuddy = await Client.post(`${BASE_URL}/user-buddies/raw/user/${user.id}/buddy/${potentialBuddyId}`)\n    const userMatchedBuddyId = userMatchedBuddy.data[0][0].id\n    const userBuddyActivity = await Client.post(\n      `${BASE_URL}/user-buddy-activities/user-buddy/${userMatchedBuddyId}/activity/${selectActivity.id}`\n    )\n  }\n\n  const getNextUser = async () => {\n    await removeRejectedBuddyFromPool()\n    toggleClickNext(!clickNext)\n  }\n\n  const addUserToBuddyList = async () => {\n    await removeMatchedBuddyFromPool()\n    toggleClickBuddyUp(!clickBuddyUp)\n  }\n\n  const setMatches = async () => {\n    const buddyMatches = []\n    buddyLikes.forEach((buddyLike) => {\n      potentialBuddyMatches.forEach((potentialConnection) => {\n        if (potentialConnection.id===buddyLike.userId && !buddyMatches.includes(potentialConnection)){\n          buddyMatches.push(potentialConnection)\n      }})\n    })\n    setBuddyConnections(buddyMatches)\n    if (buddyConnections.length > 0) {\n      toggleConnection(true)\n    }\n  }\n\n  useEffect(() => {\n    getPoolOfBuddies()\n  }, [user, clickNext, clickBuddyUp])\n\n  useEffect(() => {\n    if (poolOfBuddies.length > 0) {\n      getRandomPotentialBuddy()\n      toggleNoMorePotentialBuddies(false)\n    } else {\n      toggleNoMorePotentialBuddies(true)\n    }\n    setMatches()\n  }, [poolOfBuddies])\n\n  return (\n    <div className='buddySwipeAndMatch'>\n      <div className='buddySwipe'>\n        <h1>Buddy Swipe</h1>\n        {noMorePotentialBuddies ? (\n          <h3>Waiting for More Buddies...</h3>\n        ) : (\n          <UserCard\n            userBuddy={potentialBuddy}\n            getNextUser={getNextUser}\n            addUserToBuddyList={addUserToBuddyList}\n          />\n        )}\n      </div>\n      <div className='buddyMatch'>\n        {user && (<h1>Buddy Matches</h1>)}\n        {user && !connection && (<h3>Waiting for Buddies To Match...</h3>)}\n        <div className=\"buddyMatchList\">\n          {user && connection && (\n            buddyConnections.map((buddyConnection) => \n            <BuddyList key={buddyConnection.id} buddyConnection={buddyConnection} />\n          )\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BuddySwipe\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}